// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String   @unique
  password  String
  tasks     Task[]
  subtasks  Subtask[]
}

model Task {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  description String?
  status      Status    @default(TODO)
  authorId    Int
  author      User      @relation(fields: [authorId], references: [id])
  subtasks    Subtask[]
}

model Subtask {
  id              Int       @id @default(autoincrement())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  title           String
  description     String?
  status          Status    @default(TODO)
  authorId        Int
  author          User      @relation(fields: [authorId], references: [id])
  taskId          Int?
  task            Task?     @relation(fields: [taskId], references: [id])
  parentSubtaskId Int?
  parent          Subtask?  @relation("SubtaskToSubtask", fields: [parentSubtaskId], references: [id])
  subtasks        Subtask[] @relation("SubtaskToSubtask")
}